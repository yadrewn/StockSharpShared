<?xml version="1.0" encoding="utf-8"?>
<topic id="82437493-cd53-41eb-b756-d913af0f4f8e" revisionNumber="0">
	<developerWalkthroughDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">

		<introduction>
			<para>
				Для мониторинга работы торговых роботов, написанных на <token>stocksharp</token>, можно использовать специальный класс
				<codeEntityReference>T:StockSharp.Logging.LogManager</codeEntityReference>. Данный класс принимает сообщения
				<codeEntityReference>T:StockSharp.Logging.LogMessage</codeEntityReference> от источников
				<codeEntityReference qualifyHint="true">P:StockSharp.Logging.LogManager.Sources</codeEntityReference> через событие 
				<codeEntityReference qualifyHint="true">E:StockSharp.Logging.ILogSource.Log</codeEntityReference> и передает их в слушатели
				<codeEntityReference qualifyHint="true">P:StockSharp.Logging.LogManager.Listeners</codeEntityReference>. Таким образом код робота
				сможет передавать отладочную информацию (например, об ошибках, случившихся в процессе работы, или дополнительную информацию о математических расчетах),
				а <codeEntityReference>T:StockSharp.Logging.LogManager</codeEntityReference> будет решать, как отобразить для оператора данную информацию.
			</para>
			<para>
				Стандартно в <token>stocksharp</token> входят следующие реализации <codeEntityReference>T:StockSharp.Logging.ILogListener</codeEntityReference>,
				выбор которых влияет на то, куда будут переданы поступившие от стратегии сообщения:
			</para>
			<list class="ordered">
				<listItem>
					<codeEntityReference>T:StockSharp.Logging.FileLogListener</codeEntityReference> - записывает сообщения в текстовый файл.
					Рекомендуется использовать для уже сделаного робота, и использовать логи в форс-мажорных ситуациях.
				</listItem>
				<listItem>
					<codeEntityReference>T:StockSharp.Logging.SoundLogListener</codeEntityReference> - проигрывает звуковое сообщение когда приходит
					новое сообщение. Рекомендуется использовать, если за роботом нет постоянного внимания.
				</listItem>
				<listItem>
					<codeEntityReference>T:StockSharp.Logging.ConsoleLogListener</codeEntityReference> - записывает сообщения в консольное окно (если
					робот не имеет такое окно, то оно будет автоматически создано). Рекомендуется использовать для отладки и тестирования робота.
				</listItem>
				<listItem>
					<codeEntityReference>T:StockSharp.Logging.DebugLogListener</codeEntityReference> - записывает сообщения в отладочное окно. Такое
					окно можно просматривать через специальные программы, такие как <token>dbgview</token>. Рекомендуется использовать для отладки и
					тестирования робота.
				</listItem>
				<listItem>
					<codeEntityReference>T:StockSharp.Logging.EmailLogListener</codeEntityReference> - отсылает сообщения на указанный email адрес.
					Рекомендуется использовать, если робот расположен на непостоянно контролируемом компьютере	(на сервере у хостера).
				</listItem>
				<!-- <listItem>
					<codeEntityReference>T:StockSharp.Logging.SmsLogListener</codeEntityReference> - отсылает сообщения на телефон через Google
					Calendar. Рекомендуется использовать, если робот расположен на непостоянно контролируемом компьютере (на сервере у провайдера).
				</listItem> -->
				<listItem>
					<codeEntityReference>T:StockSharp.Xaml.GuiLogListener</codeEntityReference> - отображает сообщения через
					специальное окно <codeEntityReference>T:StockSharp.Xaml.LogWindow</codeEntityReference>. Умеет работать в двух режимах: когда
					все сообщения пишутся в одно окно, и когда для каждого <codeEntityReference>T:StockSharp.Logging.ILogSource</codeEntityReference> создается
					отдельное окно. Рекомендуется использовать, если робот обладает графическим интерфейсом.
				</listItem>
				<listItem>
					<codeEntityReference>T:StockSharp.Logging.Log4NetLogListener</codeEntityReference> - записывает сообщения через специальную
					библиотеку <token>log4net</token>. Рекомендуется для тех, кто уже знаком с данной библиотекой.
				</listItem>
			</list>
			<para>
				<codeEntityReference>T:StockSharp.Logging.LogListener</codeEntityReference> можно настроить на фильтрацию сообщений через
				свойство <codeEntityReference>P:StockSharp.Logging.LogListener.Filters</codeEntityReference>. Например, через фильтры
				можно задать, какой тип сообщений стоит обрабатывать. Это особенно полезно в случаях использования
				<codeEntityReference>T:StockSharp.Logging.SoundLogListener</codeEntityReference> или
				<codeEntityReference>T:StockSharp.Logging.EmailLogListener</codeEntityReference>, чтобы, к примеру, посылать e-mail только 
				в критических ситуациях (ошибка алгоритма торговли), а не на каждое отладочное сообщение.
			</para>
		</introduction>

		

		<!-- One or more procedure or section elements -->

		<!--<section>
      <title>Optional section</title>

      <content>
        <para>Some topic content</para>
      </content>
    </section>-->

    <nextSteps>
      <content>
        <para><link xlink:href="eca7454c-0532-4aaf-92bf-7a3d0cba635b">Логирование Strategy</link></para>
        <para><link xlink:href="9619f1db-064f-421f-967e-4c15a5b0aa71">Логирование IConnector</link></para>
        <para><link xlink:href="f9e75266-8f0e-4983-8319-7a41d53e0f39">Другие источники логов</link></para>
        <para><link xlink:href="1bed8343-9171-49ce-8259-f44007e01a78">Визуальный мониторинг</link></para>
        <para><link xlink:href="a711d06d-9d1d-40b8-89bf-ee62d817a878">Создание ILogListener</link></para>
      </content>
    </nextSteps>

		<relatedTopics>
			<!-- Supported Link Types
    
         All of the following linking mechanisms may be used in the topic's content 
         as well as in the related topics section.
    
    Linking to API reference documentation: 
    
		    <codeEntityReference>API reference ID</codeEntityReference>

    Linking to external resources and custom HTML topics: 

        <externalLink>
          <linkText>  Required hyperlink text  </linkText>
          <linkAlternateText>  Optional link title  </linkAlternateText>
          <linkUri>  Required URI  </linkUri>
        </externalLink>
    
    Linking to other conceptual topics: 
    
        <link xlink:href="GUID topic name (without file extension)" />
                
    Linking to named references:
    
        (Refer to the project's Help\Settings\links.xml file for more information)
    
        <link xref="id"> Optional link text </link>
        <link vref="id or URI"> Optional link text </link>
        
    -->

			<!-- Example Usage 

      <codeEntityReference>T:MyNamespace.MyClass</codeEntityReference>
      <codeEntityReference>P:MyNamespace.MyClass.MyProp</codeEntityReference>
      <codeEntityReference>M:System.IO.File.OpenText(System.String)</codeEntityReference>

      <externalLink>
        <linkText>Sandcastle Styles</linkText>
        <linkAlternateText>Sandcastle Styles on CodePlex</linkAlternateText>
        <linkUri>http://codeplex.com/SandcastleStyles</linkUri>
      </externalLink>

      <externalLink>
        <linkText>Change Log</linkText>
        <linkUri>ChangeLog.html</linkUri>
      </externalLink>

      <link xlink:href="2BFD9215-1216-403d-8C46-8420A4D01B83"/>
      
      <link xref="home">Our Home Page</link>
      <link vref="/controls/design.aspx">Control Architecture</link>
      -->
		</relatedTopics>

	</developerWalkthroughDocument>
</topic>