<?xml version="1.0" encoding="utf-8"?>
<topic id="6fe5b321-a23d-415d-b3e3-af9de9212a20" revisionNumber="0">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <!--<summary>
      <para>Optional abstract</para>
    </summary>-->

    <introduction>
		<para>
			Для котирования опционов реализована специальная стратегия <codeEntityReference>T:StockSharp.Algo.Strategies.Derivatives.VolatilityQuotingStrategy</codeEntityReference>,
			которая предусматривает котирование объема по заданным границам волатильности.
		</para>
    </introduction>

	  <procedure>
		  <title>Котирование по волатильности</title>

		  <steps class="ordered">
			  <step>
				  <content>
					  <para>
						  В дистрибутиве <token>stocksharp</token> идет пример SampleOptionQuoting, который котирует выбранный страйк по заданной границе
						  волатильности.
					  </para>
				  </content>
			  </step>
			  <step>
				  <content>
					  <para>
						  Создание подключения к <token>quik</token> и запуск экспорта:
					  </para>
					  <code language="C#">// создаем шлюз
_trader = new QuikTrader(this.Path.Text);

this.Portfolio.Trader = _trader;

// изменяем метаданные так, чтобы начали обрабатывать дополнительные колонки опционов
var columns = _trader.SecuritiesTable.Columns;
columns.Add(DdeSecurityColumns.Strike);
columns.Add(DdeSecurityColumns.Volatility);
columns.Add(DdeSecurityColumns.UnderlyingSecurity);
columns.Add(DdeSecurityColumns.TheorPrice);
columns.Add(DdeSecurityColumns.OptionType);
columns.Add(DdeSecurityColumns.ExpiryDate);

// добавляем в выпадающий список только опционы
_trader.NewSecurities += securities =>
	this.GuiAsync(() => _options.AddRange(securities.Where(s => s.Type == SecurityTypes.Option)));

// подписываемся на событие новых сделок чтобы обновить текущую цену фьючерса
_trader.NewTrades += trades => this.GuiAsync(() =>
{
	var option = this.SelectedOption;
	if (option != null)
	{
		var future = option.GetUnderlyingAsset();
		if (future.LastTrade != null)
			this.BaseActivePrice.Text = future.LastTrade.Price.ToString();
	}
});

_trader.Connected += () => _trader.StartExport();

_trader.Connect();</code>
				  </content>
			  </step>
			  <step>
				  <content>
					  <para>
						  Настройка стратегии <codeEntityReference>T:StockSharp.Algo.Strategies.Derivatives.VolatilityQuotingStrategy</codeEntityReference> (заполнение
						  границ волатильности, а также создание заявки, через которую указываются требуемый объем и направление котирования):
					  </para>
					  <code><![CDATA[// создаем котирование на покупку 20-ти контрактов
var quoting = new VolatilityQuotingStrategy(
		new Range<decimal>(this.VolatilityMin.Text.To<decimal>(), this.VolatilityMax.Text.To<decimal>()),
		OrderDirections.Buy, 20)
{
	// указываем, что котирование работает с объемом в 1 контракт
	Volume = 1,
	Security = option,
	Portfolio = this.Portfolio.SelectedPortfolio,
	Trader = _trader,
};]]></code>
				  </content>
			  </step>
			  <step>
				  <content>
					  <para>
						  Запуск котирования:
					  </para>
					  <code language="C#">quoting.Start();</code>
				  </content>
			  </step>
			  <step>
				  <content>
					  <para>
						  Для визуального представления волатильности пример показывает, как можно перевести стандартный стакан с котировками в стакан волатильности
						  за счет использования метода 
						  <codeEntityReference qualifyHint="true">M:StockSharp.Algo.Derivatives.DerivativesHelper.ImpliedVolatility(StockSharp.BusinessEntities.MarketDepth,StockSharp.BusinessEntities.ISecurityProvider,StockSharp.BusinessEntities.IMarketDataProvider,System.DateTime,System.Decimal,System.Decimal)</codeEntityReference>:
					  </para>
					  <code language="C#"><![CDATA[var ivDepth = _depth.ImpliedVolatility();

this.GuiAsync(() =>
{
	this.Quotes.Clear();
	this.Quotes.AddRange(ivDepth.Select(q => new IVQuote(q)));
});]]></code>
					  <mediaLink>
						  <image placement="center" xlink:href="sample_quote_iv" />
					  </mediaLink>
				  </content>
			  </step>
			  <step>
				  <content>
					  <para>
						  Окончание котирования и остановка стратегии:
					  </para>
					  <code>quoting.Stop();</code>
				  </content>
			  </step>
		  </steps>
	  </procedure>

    <relatedTopics>
      <!-- Supported Link Types
    
         All of the following linking mechanisms may be used in the topic's content 
         as well as in the related topics section.
    
    Linking to API reference documentation: 
    
		    <codeEntityReference>API reference ID</codeEntityReference>

    Linking to external resources and custom HTML topics: 

        <externalLink>
          <linkText>  Required hyperlink text  </linkText>
          <linkAlternateText>  Optional link title  </linkAlternateText>
          <linkUri>  Required URI  </linkUri>
        </externalLink>
    
    Linking to other conceptual topics: 
    
        <link xlink:href="GUID topic name (without file extension)" />
        
    Linking to named references:
    
        (Refer to the project's Help\Settings\links.xml file for more information)
    
        <link xref="id"> Optional link text </link>
        <link vref="id or URI"> Optional link text </link>
        
    -->

      <!-- Example Usage 

      <codeEntityReference>T:MyNamespace.MyClass</codeEntityReference>
      <codeEntityReference>P:MyNamespace.MyClass.MyProp</codeEntityReference>
      <codeEntityReference>M:System.IO.File.OpenText(System.String)</codeEntityReference>

      <externalLink>
        <linkText>Sandcastle Styles</linkText>
        <linkAlternateText>Sandcastle Styles on CodePlex</linkAlternateText>
        <linkUri>http://www.codeplex.com/SandcastleStyles</linkUri>
      </externalLink>

      <externalLink>
        <linkText>Change Log</linkText>
        <linkUri>ChangeLog.html</linkUri>
      </externalLink>

      <link xlink:href="2BFD9215-1216-403d-8C46-8420A4D01B83"/>
      
      <link xref="home">Our Home Page</link>
      <link vref="/controls/design.aspx">Control Architecture</link>
      -->
    </relatedTopics>

  </developerConceptualDocument>
</topic>