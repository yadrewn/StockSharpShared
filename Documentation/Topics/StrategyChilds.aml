<?xml version="1.0" encoding="utf-8"?>
<topic id="8ea639f6-ce74-4a00-9f13-db59c8c2396f" revisionNumber="0">
  <developerWalkthroughDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <!--<summary>
      <para>Optional abstract</para>
    </summary>-->

    <introduction>
      <para>
		С помощью <codeEntityReference>T:StockSharp.Algo.Strategies.Strategy</codeEntityReference> можно так же создавать дочерние стратегии.
		Например, когда требуется реализовать процесс торговли, который оперирует стандартными (или уже ранее реализованными) алгоритмами, выстраивая
		их в единую цепочку:
	  </para>
		<para>
			<mediaLink>
				<image placement="center" xlink:href="strategychilds" />
			</mediaLink>
		</para>
    </introduction>

    <prerequisites>
      <content>
        <para>
		  <link xlink:href="a8159c99-256b-46e4-80fe-7cf92944b4c9">Создание стратегии</link>
		</para>
      </content>
    </prerequisites>
    
    <section>
      <title>Работа с дочерними стратегиями</title>

      <content>
        <para>
			Чтобы добавить дочернюю стратегию необходимо использовать свойство <codeEntityReference qualifyHint="true">P:StockSharp.Algo.Strategies.Strategy.ChildStrategies</codeEntityReference>.
			Значения <codeEntityReference qualifyHint="true">P:StockSharp.Algo.Strategies.Strategy.Connector</codeEntityReference>,
			<codeEntityReference qualifyHint="true">P:StockSharp.Algo.Strategies.Strategy.Portfolio</codeEntityReference>
			и <codeEntityReference qualifyHint="true">P:StockSharp.Algo.Strategies.Strategy.Security</codeEntityReference> для дочерних стратегий
			можно не устанавливать, и они автоматически заполнятся при добавлении в родительскую стратегию.
		</para>
		<para>
			При добавлении новой дочерней стратегии она автоматически получает состояние из родительской. Например, если родительская стратегия находится в
			работающем состоянии (<codeEntityReference qualifyHint="true">F:StockSharp.Algo.ProcessStates.Started</codeEntityReference>),
			то дочерняя автоматически будет установлена в работающее состояние (и, наоборот, в случае с <codeEntityReference qualifyHint="true">F:StockSharp.Algo.ProcessStates.Stopped</codeEntityReference>).
			Поэтому вызывать метод <codeEntityReference qualifyHint="true">M:StockSharp.Algo.Strategies.Strategy.Start</codeEntityReference> для дочерней
			стратегии не нужно. Он автоматически будет вызван, при запуске родительской стратегии. Таким образом, вызывать метод
			<codeEntityReference qualifyHint="true">M:StockSharp.Algo.Strategies.Strategy.Start</codeEntityReference> можно только для тех стратегий,
			которые являются корневыми.
		</para>
		<para>
			Родительская и все ее дочерние стратегии исполняются параллельно. Это значит, что, если была выбрана
			<link xlink:href="a8159c99-256b-46e4-80fe-7cf92944b4c9">итерационная модель</link>, то методы
			<codeEntityReference qualifyHint="true">M:StockSharp.Algo.Strategies.TimeFrameStrategy.OnProcess</codeEntityReference> для дочерних и родительских
			стратегий выполняются параллельно. Аналогично и с правилами <codeEntityReference qualifyHint="true">P:StockSharp.Algo.Strategies.Strategy.Rules</codeEntityReference>,
			если была выбрана <link xlink:href="8c0327db-494a-4fe0-aba8-0d4b93dea60e">событийная модель</link>.
		</para>
	  <alert class="note">
		  Метод <codeEntityReference qualifyHint="true">M:StockSharp.Algo.Strategies.Strategy.Stop</codeEntityReference> для дочерней стратегии,
		  в отличие от <codeEntityReference qualifyHint="true">M:StockSharp.Algo.Strategies.Strategy.Start</codeEntityReference>, можно вызывать
		  в любое время. Например, когда алгоритму требуется принудительно остановить работу дочерней стратегии при том, что сам алгоритм дочерней
		  стратегии еще не выполнился до конца (например, прервать <link xlink:href="24250c24-029c-4dbc-bc8b-4afde645e483">Котирование</link>).
	  </alert>
		<para>
		  По умолчанию, дочерние стратегии не связаны друг с другом, и исполняются независимо. Когда требуется установить
		  зависимость между стратегиями, необходимо использовать класс <codeEntityReference>T:StockSharp.Algo.Strategies.BasketStrategy</codeEntityReference>.
		  Данный класс позволяет задать условия завершения стратегий в зависимости друг от друга через признаки
		  <codeEntityReference>T:StockSharp.Algo.Strategies.BasketStrategyFinishModes</codeEntityReference>. Например, через значение
		  <codeEntityReference>F:StockSharp.Algo.Strategies.BasketStrategyFinishModes.First</codeEntityReference> задается условие, при котором все дочерние
		  стратегии будут остановлены, когда исполнится хотя бы одна из них. Пример использования
		  <codeEntityReference>T:StockSharp.Algo.Strategies.BasketStrategy</codeEntityReference> показан в разделе
		  <link xlink:href="63952fce-6e43-4427-985a-1654e8d9cfc1">Тейк-профит и стоп-лосс</link>.
		</para>
      </content>
    </section>

    <nextSteps>
      <content>
        <para>
		  <link xlink:href="24250c24-029c-4dbc-bc8b-4afde645e483">Котирование</link>
		</para>
		  <para>
			  <link xlink:href="63952fce-6e43-4427-985a-1654e8d9cfc1">Тейк-профит и стоп-лосс</link>
		  </para>
      </content>
    </nextSteps>
    
    <relatedTopics>
      <!-- Supported Link Types
    
         All of the following linking mechanisms may be used in the topic's content 
         as well as in the related topics section.
    
    Linking to API reference documentation: 
    
		    <codeEntityReference>API reference ID</codeEntityReference>

    Linking to external resources and custom HTML topics: 

        <externalLink>
          <linkText>  Required hyperlink text  </linkText>
          <linkAlternateText>  Optional link title  </linkAlternateText>
          <linkUri>  Required URI  </linkUri>
        </externalLink>
    
    Linking to other conceptual topics: 
    
        <link xlink:href="GUID topic name (without file extension)" />
                
    Linking to named references:
    
        (Refer to the project's Help\Settings\links.xml file for more information)
    
        <link xref="id"> Optional link text </link>
        <link vref="id or URI"> Optional link text </link>
        
    -->

      <!-- Example Usage 

      <codeEntityReference>T:MyNamespace.MyClass</codeEntityReference>
      <codeEntityReference>P:MyNamespace.MyClass.MyProp</codeEntityReference>
      <codeEntityReference>M:System.IO.File.OpenText(System.String)</codeEntityReference>

      <externalLink>
        <linkText>Sandcastle Styles</linkText>
        <linkAlternateText>Sandcastle Styles on CodePlex</linkAlternateText>
        <linkUri>http://www.codeplex.com/SandcastleStyles</linkUri>
      </externalLink>

      <externalLink>
        <linkText>Change Log</linkText>
        <linkUri>ChangeLog.html</linkUri>
      </externalLink>

      <link xlink:href="2BFD9215-1216-403d-8C46-8420A4D01B83"/>
      
      <link xref="home">Our Home Page</link>
      <link vref="/controls/design.aspx">Control Architecture</link>
      -->
    </relatedTopics>
    
  </developerWalkthroughDocument>
</topic>