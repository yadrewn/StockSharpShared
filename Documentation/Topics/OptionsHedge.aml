<?xml version="1.0" encoding="utf-8"?>
<topic id="598efa7f-83fb-4dc8-8822-e6776362f652" revisionNumber="0">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <!--<summary>
      <para>Optional abstract</para>
    </summary>-->

    <introduction>
		<para>
			Если требуется защитить позиции по опционным стратегиям (например, как <link xlink:href="6fe5b321-a23d-415d-b3e3-af9de9212a20">Котирование по волатильности</link>)
			можно воспользоваться стратегией хеджирования по дельте <codeEntityReference>T:StockSharp.Algo.Strategies.Derivatives.DeltaHedgeStrategy</codeEntityReference>.
		</para>
    </introduction>

	  <procedure>
		  <title>Дельта хеджирование</title>

		  <steps class="ordered">
			  <step>
				  <content>
					  <para>
						  В качестве демонстрации работы <codeEntityReference>T:StockSharp.Algo.Strategies.Derivatives.DeltaHedgeStrategy</codeEntityReference> изменен пример
						  SampleOptionQuoting (подробнее, <link xlink:href="6fe5b321-a23d-415d-b3e3-af9de9212a20">Котирование по волатильности</link>).
					  </para>
				  </content>
			  </step>
			  <step>
				  <content>
					  <para>
						  Сама стратегия <codeEntityReference>T:StockSharp.Algo.Strategies.Derivatives.VolatilityQuotingStrategy</codeEntityReference> не запускается,
						  а вместо этого она упаковывается в <codeEntityReference>T:StockSharp.Algo.Strategies.BasketStrategy</codeEntityReference>, у
						  которой и вызывается метод запуска стратегии:
					  </para>
					  <code language="C#">var basket = new BasketStrategy(BasketStrategyFinishModes.All);
basket.ChildStrategies.Add(quoting);

// запускаем котирование
basket.Start();</code>
					  <para>
						  <codeEntityReference>T:StockSharp.Algo.Strategies.Derivatives.DeltaHedgeStrategy</codeEntityReference> принимает родительскую стратегию, 
						  которая содержит в качестве <link xlink:href="8ea639f6-ce74-4a00-9f13-db59c8c2396f">дочерних стратегий</link> стратегии,
						  работающие отдельно по своему страйку. Таким образом <codeEntityReference>T:StockSharp.Algo.Strategies.Derivatives.DeltaHedgeStrategy</codeEntityReference>
						  контролирует суммарную позицию по всем опционным стратегиям. Так как пример работает только с одним страйком и, следовательно, с одной
						  опционной стратегией, то эта стратегия была упакована в специальная "корзину" стратегий - <codeEntityReference>T:StockSharp.Algo.Strategies.BasketStrategy</codeEntityReference>.
						  <codeEntityReference>T:StockSharp.Algo.Strategies.BasketStrategy</codeEntityReference> не содержит торговой логики и сделана для создания
						  иерархии стратегий, которая нужна <codeEntityReference>T:StockSharp.Algo.Strategies.Derivatives.DeltaHedgeStrategy</codeEntityReference>.
					  </para>
				  </content>
			  </step>
			  <step>
				  <content>
					  <para>
						  После создания корзины для котирования необходимо создать и запустить дельта хеджирование:
					  </para>
					  <code>// создаем дельта-хеджирование, передав в него опционные стратегии для отслеживания их позиции
var hedge = new DeltaHedgeStrategy(basket)
{
	Security = option.GetUnderlyingAsset(),
	Portfolio = this.Portfolio.SelectedPortfolio,
	Trader = _trader,
};

// запускаем дельта-хеджирование
hedge.Start();</code>
				  </content>
			  </step>
			  <step>
				  <content>
					  <para>
						  Завершение работы дельта хеджирования:
					  </para>
					  <code>hedge.Stop();
basket.Stop();</code>
				  </content>
			  </step>
		  </steps>
	  </procedure>

    <!--<section>
      <title>A topic section</title>

      <content>
        <para>Some topic content</para>
      </content>
    </section>-->

    <relatedTopics>
      <!-- Supported Link Types
    
         All of the following linking mechanisms may be used in the topic's content 
         as well as in the related topics section.
    
    Linking to API reference documentation: 
    
		    <codeEntityReference>API reference ID</codeEntityReference>

    Linking to external resources and custom HTML topics: 

        <externalLink>
          <linkText>  Required hyperlink text  </linkText>
          <linkAlternateText>  Optional link title  </linkAlternateText>
          <linkUri>  Required URI  </linkUri>
        </externalLink>
    
    Linking to other conceptual topics: 
    
        <link xlink:href="GUID topic name (without file extension)" />
        
    Linking to named references:
    
        (Refer to the project's Help\Settings\links.xml file for more information)
    
        <link xref="id"> Optional link text </link>
        <link vref="id or URI"> Optional link text </link>
        
    -->

      <!-- Example Usage 

      <codeEntityReference>T:MyNamespace.MyClass</codeEntityReference>
      <codeEntityReference>P:MyNamespace.MyClass.MyProp</codeEntityReference>
      <codeEntityReference>M:System.IO.File.OpenText(System.String)</codeEntityReference>

      <externalLink>
        <linkText>Sandcastle Styles</linkText>
        <linkAlternateText>Sandcastle Styles on CodePlex</linkAlternateText>
        <linkUri>http://www.codeplex.com/SandcastleStyles</linkUri>
      </externalLink>

      <externalLink>
        <linkText>Change Log</linkText>
        <linkUri>ChangeLog.html</linkUri>
      </externalLink>

      <link xlink:href="2BFD9215-1216-403d-8C46-8420A4D01B83"/>
      
      <link xref="home">Our Home Page</link>
      <link vref="/controls/design.aspx">Control Architecture</link>
      -->
    </relatedTopics>

  </developerConceptualDocument>
</topic>