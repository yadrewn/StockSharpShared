<?xml version="1.0" encoding="utf-8"?>
<topic id="de6c121a-6a89-4c4b-80d1-804d7b98fda7" revisionNumber="1">
	<developerWalkthroughDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
		<para>
		  В <token>stocksharp</token> для <codeEntityReference qualifyHint="false">T:StockSharp.Algo.IMarketRule</codeEntityReference> уже есть ряд предопределенных условий и действий для
		  наиболее распространенных сценариев.
		  Ниже представлены сгруппированные по торговым объектам списки условий класса <codeEntityReference qualifyHint="false">T:StockSharp.Algo.MarketRuleHelper</codeEntityReference>:
		</para>
		  <para>
			  Для <codeEntityReference>T:StockSharp.BusinessEntities.Security</codeEntityReference>
		  </para>
		  <list class="bullet">
		  	  <listItem>
				  <codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.MarketRuleHelper.WhenChanged(StockSharp.BusinessEntities.Security,StockSharp.BusinessEntities.IConnector)</codeEntityReference>
				  - правило на событие изменения инструмента.
			  </listItem>
			  <listItem>
				  <codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.MarketRuleHelper.WhenNewTrades(StockSharp.BusinessEntities.Security,StockSharp.BusinessEntities.IConnector)</codeEntityReference>
				  - правило на событие появления у инструмента новой сделки.
			  </listItem>
			  <listItem>
				  <codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.MarketRuleHelper.WhenMarketDepthChanged(StockSharp.BusinessEntities.Security,StockSharp.BusinessEntities.IConnector)</codeEntityReference>
				  - правило на событие изменения стакана по инструменту.
			  </listItem>
			  <listItem>
				  <codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.MarketRuleHelper.WhenBestBidPriceMore(StockSharp.BusinessEntities.Security,StockSharp.BusinessEntities.IConnector,StockSharp.Messages.Unit)</codeEntityReference>
				  - правило на событие повышения лучшего бида выше определенного уровня.
				</listItem>
			  <listItem>
				  <codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.MarketRuleHelper.WhenBestBidPriceLess(StockSharp.BusinessEntities.Security,StockSharp.BusinessEntities.IConnector,StockSharp.Messages.Unit)</codeEntityReference>
					- правило на событие понижения лучшего бида ниже определенного уровня.
				</listItem>
			  <listItem>
				  <codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.MarketRuleHelper.WhenBestAskPriceMore(StockSharp.BusinessEntities.Security,StockSharp.BusinessEntities.IConnector,StockSharp.Messages.Unit)</codeEntityReference>
					- правило на событие повышения лучшего оффера выше определенного уровня.
				</listItem>
			  <listItem>
				  <codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.MarketRuleHelper.WhenBestAskPriceLess(StockSharp.BusinessEntities.Security,StockSharp.BusinessEntities.IConnector,StockSharp.Messages.Unit)</codeEntityReference>
					- правило на событие понижения лучшего оффера ниже определенного уровня.
				</listItem>
			  <listItem>
				  <codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.MarketRuleHelper.WhenLastTradePriceMore(StockSharp.BusinessEntities.Security,StockSharp.BusinessEntities.IConnector,StockSharp.BusinessEntities.IMarketDataProvider,StockSharp.Messages.Unit)</codeEntityReference>
					- правило на событие повышения цены последней сделки выше определенного уровня.
				</listItem>
			  <listItem>
				  <codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.MarketRuleHelper.WhenLastTradePriceLess(StockSharp.BusinessEntities.Security,StockSharp.BusinessEntities.IConnector,StockSharp.BusinessEntities.IMarketDataProvider,StockSharp.Messages.Unit)</codeEntityReference>
					- правило на событие понижения цены последней сделки ниже определенного уровня.
				</listItem>
		  </list>
		  <para>
			  Для <codeEntityReference>T:StockSharp.BusinessEntities.MarketDepth</codeEntityReference>
		  </para>
		  <list class="bullet">
		  	  <listItem>
				  <codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.MarketRuleHelper.WhenChanged(StockSharp.BusinessEntities.MarketDepth)</codeEntityReference>
				  - правило на событие изменения стакана.
			  </listItem>
			  <listItem>
				  <codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.MarketRuleHelper.WhenSpreadMore(StockSharp.BusinessEntities.MarketDepth,StockSharp.Messages.Unit)</codeEntityReference>
					- правило на событие повышения размера спреда стакана выше определенного уровня.
				</listItem>
			  <listItem>
				  <codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.MarketRuleHelper.WhenSpreadLess(StockSharp.BusinessEntities.MarketDepth,StockSharp.Messages.Unit)</codeEntityReference>
					- правило на событие понижения размера спреда стакана ниже определенного уровня.
				</listItem>
			  <listItem>
				  <codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.MarketRuleHelper.WhenBestBidPriceMore(StockSharp.BusinessEntities.MarketDepth,StockSharp.Messages.Unit)</codeEntityReference>
					- правило на событие повышения лучшего бида выше определенного уровня.
				</listItem>
			  <listItem>
				  <codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.MarketRuleHelper.WhenBestBidPriceLess(StockSharp.BusinessEntities.MarketDepth,StockSharp.Messages.Unit)</codeEntityReference>
					- правило на событие понижения лучшего бида ниже определенного уровня.
				</listItem>
			  <listItem>
				  <codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.MarketRuleHelper.WhenBestAskPriceMore(StockSharp.BusinessEntities.MarketDepth,StockSharp.Messages.Unit)</codeEntityReference>
					- правило на событие повышения лучшего оффера выше определенного уровня.
				</listItem>
			  <listItem>
				  <codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.MarketRuleHelper.WhenBestAskPriceLess(StockSharp.BusinessEntities.MarketDepth,StockSharp.Messages.Unit)</codeEntityReference>
					- правило на событие понижения лучшего оффера ниже определенного уровня.
				</listItem>
		  </list>
		  <para>
			  Для <codeEntityReference>T:StockSharp.BusinessEntities.Order</codeEntityReference>
		  </para>
		  <list class="bullet">
			  <listItem>
				  <codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.MarketRuleHelper.WhenRegistered(StockSharp.BusinessEntities.Order)</codeEntityReference>
				  - правило на событие успешной регистрации заявки на бирже.
			  </listItem>
				<listItem>
					<codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.MarketRuleHelper.WhenActivated(StockSharp.BusinessEntities.Order)</codeEntityReference>
					- правило на событие активации стоп-заявки.
				</listItem>
			  <listItem>
				  <codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.MarketRuleHelper.WhenPartiallyMatched(StockSharp.BusinessEntities.Order)</codeEntityReference>
				  - правило на событие частичного исполнения заявки.
			  </listItem>
			  <listItem>
				  <codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.MarketRuleHelper.WhenRegisterFailed(StockSharp.BusinessEntities.Order)</codeEntityReference>
				  - правило на событие неудачной регистрации заявки на бирже.
			  </listItem>
				<listItem>
					<codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.MarketRuleHelper.WhenCancelFailed(StockSharp.BusinessEntities.Order)</codeEntityReference>
					-  правило на событие неудачного снятия заявки на бирже.
				</listItem>
			  <listItem>
				  <codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.MarketRuleHelper.WhenCanceled(StockSharp.BusinessEntities.Order)</codeEntityReference>
				  - правило на событие отмены заявки.
			  </listItem>
			  <listItem>
				  <codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.MarketRuleHelper.WhenMatched(StockSharp.BusinessEntities.Order)</codeEntityReference>
				  - правило на событие полного исполнения заявки.
			  </listItem>
			  <listItem>
				  <codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.MarketRuleHelper.WhenChanged(StockSharp.BusinessEntities.Order)</codeEntityReference>
				  - правило на событие изменения заявки.
			  </listItem>
			  <listItem>
				  <codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.MarketRuleHelper.WhenNewTrades(StockSharp.BusinessEntities.Order)</codeEntityReference>
				  - правило на событие появления сделок по заявке.
			  </listItem>
		  </list>
		  <para>
			  Для <codeEntityReference>T:StockSharp.BusinessEntities.Portfolio</codeEntityReference>
		  </para>
		  <list class="bullet">
				<listItem>
					<codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.MarketRuleHelper.WhenMoneyLess(StockSharp.BusinessEntities.Portfolio,StockSharp.Messages.Unit)</codeEntityReference>
					- правило на событие уменьшения денег в портфеле ниже определенного уровня.
				</listItem>
				<listItem>
					<codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.MarketRuleHelper.WhenMoneyMore(StockSharp.BusinessEntities.Portfolio,StockSharp.Messages.Unit)</codeEntityReference>
					- правило на событие увеличения денег в портфеле выше определенного уровня.
				</listItem>
		  </list>
		  <para>
			  Для <codeEntityReference>T:StockSharp.BusinessEntities.Position</codeEntityReference>
		  </para>
		  <list class="bullet">
				<listItem>
					<codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.MarketRuleHelper.WhenLess(StockSharp.BusinessEntities.Position,StockSharp.Messages.Unit)</codeEntityReference>
					- правило на событие уменьшения позиции ниже определенного уровня.
				</listItem>
				<listItem>
					<codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.MarketRuleHelper.WhenMore(StockSharp.BusinessEntities.Position,StockSharp.Messages.Unit)</codeEntityReference>
					- правило на событие увеличения позиции выше определенного уровня.
				</listItem>
				<listItem>
					<codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.MarketRuleHelper.Changed(StockSharp.BusinessEntities.Position)</codeEntityReference>
					- правило на событие изменения позиции.
				</listItem>
		  </list>
<!--		  
		  <para>
			  Для <codeEntityReference>T:StockSharp.Algo.Positions.IPositionManager</codeEntityReference>
		  </para>
		  <list class="bullet">
				<listItem>
					<codeEntityReference>M:StockSharp.Algo.Strategies.StrategyRuleHelper.Less(StockSharp.Algo.Positions.IPositionManager,StockSharp.Messages.Unit)</codeEntityReference>
					- правило на событие уменьшения позиции ниже определенного уровня.
				</listItem>
				<listItem>
					<codeEntityReference>M:StockSharp.Algo.Strategies.StrategyRuleHelper.More(StockSharp.Algo.Positions.IPositionManager,StockSharp.Messages.Unit)</codeEntityReference>
					- правило на событие увеличения позиции выше определенного уровня.
				</listItem>
				<listItem>
					<codeEntityReference>M:StockSharp.Algo.Strategies.StrategyRuleHelper.Changed(StockSharp.Algo.Positions.IPositionManager)</codeEntityReference>
					- правило на событие изменения позиции.
				</listItem>
		  </list> -->		  

		  <para>
			  Для <codeEntityReference>T:StockSharp.Algo.PnL.IPnLManager</codeEntityReference>
		  </para>
		  <list class="bullet">
				<listItem>
					<codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.Strategies.StrategyHelper.WhenPnLLess(StockSharp.Algo.Strategies.Strategy,StockSharp.Messages.Unit)</codeEntityReference>
					- правило на событие уменьшения прибыли ниже определенного уровня.
				</listItem>
				<listItem>
					<codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.Strategies.StrategyHelper.WhenPnLMore(StockSharp.Algo.Strategies.Strategy,StockSharp.Messages.Unit)</codeEntityReference>
					- правило на событие увеличения прибыли выше определенного уровня.
				</listItem>
				<listItem>
					<codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.Strategies.StrategyHelper.WhenPositionChanged(StockSharp.Algo.Strategies.Strategy)</codeEntityReference>
					- правило на событие изменения прибыли.
				</listItem>
		  </list> 
		  
		  <para>
			  Для <codeEntityReference>T:StockSharp.Algo.Candles.Candle</codeEntityReference>
		  </para>
		  <list class="bullet">
			  <listItem>
				  <codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.MarketRuleHelper.WhenClosePriceMore(StockSharp.Algo.Candles.Candle,StockSharp.Messages.Unit)</codeEntityReference>
					- правило на событие повышения цены закрытия свечки выше определенного уровня.
				</listItem>
			  <listItem>
				  <codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.MarketRuleHelper.WhenClosePriceLess(StockSharp.Algo.Candles.Candle,StockSharp.Messages.Unit)</codeEntityReference>
					- правило на событие понижения цены закрытия свечки ниже определенного уровня.
				</listItem>
				<listItem>
					<codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.MarketRuleHelper.WhenTotalVolumeMore(StockSharp.Algo.Candles.Candle,StockSharp.Messages.Unit)</codeEntityReference>
					- правило на событие превышения общего объема свечки выше определенного уровня.
				</listItem>
				<listItem>
					<codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.MarketRuleHelper.WhenCurrentCandleTotalVolumeMore(StockSharp.Algo.Candles.CandleSeries,StockSharp.Messages.Unit)</codeEntityReference>
					- правило на событие превышения общего объема текущей свечки выше определенного уровня.
				</listItem>
			  <listItem>
				  <codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.MarketRuleHelper.WhenCandlesStarted(StockSharp.Algo.Candles.CandleSeries)</codeEntityReference>
				  - правило на событие появления новых свечек.
			  </listItem>
			  <listItem>
				  <codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.MarketRuleHelper.WhenCandlesChanged(StockSharp.Algo.Candles.CandleSeries)</codeEntityReference>
				  - правило на событие изменения свечек.
			  </listItem>
			  <listItem>
				  <codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.MarketRuleHelper.WhenCandlesFinished(StockSharp.Algo.Candles.CandleSeries)</codeEntityReference>
				  - правило на событие окончания свечек.
			  </listItem>
			  <listItem>
				  <codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.MarketRuleHelper.WhenChanged(StockSharp.Algo.Candles.Candle)</codeEntityReference>
				  - правило на событие изменения свечки.
			  </listItem>
			  <listItem>
				  <codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.MarketRuleHelper.WhenFinished(StockSharp.Algo.Candles.Candle)</codeEntityReference>
				  - правило на событие окончания свечки.
			  </listItem>
			  <listItem>
				  <codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.MarketRuleHelper.WhenPartiallyFinished(StockSharp.Algo.Candles.Candle,StockSharp.BusinessEntities.IConnector,System.Decimal)</codeEntityReference>
				  - правило на событие частичного окончания свечки.
			  </listItem>
			  <listItem>
				  <codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.MarketRuleHelper.WhenPartiallyFinishedCandles(StockSharp.Algo.Candles.CandleSeries,StockSharp.BusinessEntities.IConnector,System.Decimal)</codeEntityReference>
				  - правило на событие частичного окончания свечек.
			  </listItem>
		  </list>
		  <para>
			  Для <codeEntityReference>T:StockSharp.Algo.Strategies.Strategy</codeEntityReference>
		  </para>
		  <list class="bullet">
		  	  <listItem>
				  <codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.Strategies.StrategyHelper.WhenNewMyTrades(StockSharp.Algo.Strategies.Strategy)</codeEntityReference>
				  - правило на событие появление новых сделок стратегии.
			  </listItem>
			  <listItem>
				  <codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.Strategies.StrategyHelper.WhenPositionChanged(StockSharp.Algo.Strategies.Strategy)</codeEntityReference>
				  - правило на событие изменения позиции у стратегии.
			  </listItem>
				<listItem>
					<codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.Strategies.StrategyHelper.WhenStarted(StockSharp.Algo.Strategies.Strategy)</codeEntityReference>
					- правило на событие начала работы стратегии.
				</listItem>
			  <listItem>
			  	  <codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.Strategies.StrategyHelper.WhenStopping(StockSharp.Algo.Strategies.Strategy)</codeEntityReference>
				  - правило на событие начала остановки работы стратегии.
			  </listItem>
			  <listItem>
				  <codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.Strategies.StrategyHelper.WhenStopped(StockSharp.Algo.Strategies.Strategy)</codeEntityReference>
				  - правило на событие полной остановки работы стратегии.
			  </listItem>
			  <listItem>
				  <codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.Strategies.StrategyHelper.WhenError(StockSharp.Algo.Strategies.Strategy)</codeEntityReference>
				  - правило на событие ошибки стратегии.
			  </listItem>
			  <listItem>
				  <codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.Strategies.StrategyHelper.WhenWarning(StockSharp.Algo.Strategies.Strategy)</codeEntityReference>
				  - правило на событие предупреждения стратегии.
			  </listItem>
		  </list>
			<para>
				Для <codeEntityReference>T:StockSharp.BusinessEntities.IConnector</codeEntityReference>
			</para>
			<list class="bullet">
				<listItem>
					<codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.MarketRuleHelper.WhenIntervalElapsed(StockSharp.BusinessEntities.IConnector,System.TimeSpan)</codeEntityReference>
					- правило на событие изменения 
					<codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.TraderHelper.GetMarketTime(StockSharp.BusinessEntities.IConnector,StockSharp.BusinessEntities.Security)</codeEntityReference> 
					на значение, большее или равно параметру.
				</listItem>
				<listItem>
					<codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.MarketRuleHelper.WhenTimeCome(StockSharp.BusinessEntities.Security,StockSharp.BusinessEntities.IConnector,System.DateTimeOffset[])</codeEntityReference>
					- правило, которое активизируется при наступлении точного времени.
				</listItem>
		  	    
		  	    <listItem>
			        <codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.MarketRuleHelper.WhenNewMyTrades(StockSharp.BusinessEntities.IConnector)</codeEntityReference>
			  	    - правило на событие появление новых сделок.
			    </listItem>
		  	    <listItem>
		  	  	    <codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.MarketRuleHelper.WhenNewOrder(StockSharp.BusinessEntities.IConnector)</codeEntityReference>
				    - правило на событие появление новой заявки.
			    </listItem>
			</list>
			<para>
			  Аналогично условиям есть и предопределенные действия:
		  </para>
		  <list class="bullet">
			  <listItem>
				  <codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.Strategies.StrategyHelper.Register(StockSharp.Algo.IMarketRule,StockSharp.BusinessEntities.Order)</codeEntityReference>
				  - действие, регистрирующее заявку.
			  </listItem>
			  <listItem>
				  <codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.Strategies.StrategyHelper.ReRegister(StockSharp.Algo.IMarketRule,StockSharp.BusinessEntities.Order,StockSharp.BusinessEntities.Order)</codeEntityReference>
				  - действие, перерегистрирующее заявку.
			  </listItem>
			  <listItem>
				  <codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.Strategies.StrategyHelper.Cancel(StockSharp.Algo.IMarketRule,StockSharp.BusinessEntities.Order)</codeEntityReference>
				  - действие, отменяющее заявку.
			  </listItem>
<!--			  
			  <listItem>
				  <codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.Strategies.StrategyRuleHelper.ClosePosition(StockSharp.Algo.Strategies.StrategyRule)</codeEntityReference>
				  - действие, закрывающее позицию.
			  </listItem>
			  <listItem>
				  <codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.Strategies.StrategyRuleHelper.OpenPosition(StockSharp.Algo.Strategies.StrategyRule,System.Decimal)</codeEntityReference>
				  - действие, открывающее позицию.
			  </listItem>
		  
			  <listItem>
			  	  <codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.Strategies.Extensions.Protect(StockSharp.Algo.MarketRule{StockSharp.BusinessEntities.Order,System.Collections.Generic.IEnumerable{StockSharp.BusinessEntities.MyTrade}},System.Func{StockSharp.BusinessEntities.MyTrade,StockSharp.Algo.Strategies.Protective.TakeProfitStrategy},System.Func{StockSharp.BusinessEntities.MyTrade,StockSharp.Algo.Strategies.Protective.StopLossStrategy})</codeEntityReference>
				  - действие, защищающее сделки одновременно стратегиями <codeEntityReference>T:StockSharp.Algo.Strategies.Protective.TakeProfitStrategy</codeEntityReference>
				  и <codeEntityReference>T:StockSharp.Algo.Strategies.Protective.StopLossStrategy</codeEntityReference>.
			  </listItem> 
				<listItem>
				 	<codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.Strategies.Extensions.Protect(StockSharp.Algo.MarketRule{StockSharp.BusinessEntities.Order,StockSharp.BusinessEntities.Order},StockSharp.Messages.Unit,StockSharp.Messages.Unit)</codeEntityReference>
					- действие, защищающее сделки одновременно стратегиями <codeEntityReference>T:StockSharp.Algo.Strategies.Protective.TakeProfitStrategy</codeEntityReference>
					и <codeEntityReference>T:StockSharp.Algo.Strategies.Protective.StopLossStrategy</codeEntityReference>.
				</listItem> -->
				
				<listItem>
				 	<codeEntityReference qualifyHint="false" autoUpgrade="true">Overload:StockSharp.Algo.Strategies.Extensions.Protect</codeEntityReference>
					- действие, защищающее сделки одновременно стратегиями <codeEntityReference>T:StockSharp.Algo.Strategies.Protective.TakeProfitStrategy</codeEntityReference>
					и <codeEntityReference>T:StockSharp.Algo.Strategies.Protective.StopLossStrategy</codeEntityReference>.
				</listItem>
		  </list>
		  <para>
		  	Если требуется создать свое уникальное правило (на какое-то событие, которое не предусмотрено стандартно), необходимо создать свой класс-наследник
		  	<codeEntityReference qualifyHint="false">T:StockSharp.Algo.MarketRule`2</codeEntityReference>, который будет работать с необходимым условием. Ниже приведена
		  	реализация метода 
		  	<codeEntityReference qualifyHint="false" autoUpgrade="true">M:StockSharp.Algo.MarketRuleHelper.WhenMoneyMore(StockSharp.BusinessEntities.Portfolio,StockSharp.Messages.Unit)</codeEntityReference>:
		  </para>
		  <code language="C#">
			<![CDATA[		
private sealed class PortfolioRule : MarketRule<Portfolio, Portfolio>
{
	private readonly Func<Portfolio, bool> _changed;
	private readonly Portfolio _portfolio;

	public PortfolioRule(Portfolio portfolio, Func<Portfolio, bool> changed) : base(portfolio)
	{
		if (portfolio == null)
			throw new ArgumentNullException("portfolio");

		if (changed == null)
			throw new ArgumentNullException("changed");

		if (portfolio.Trader == null)
			throw new ArgumentException("Портфель не имеет информацию о шлюзе.");

		_changed = changed;

		_portfolio = portfolio;
		_portfolio.Trader.PortfoliosChanged += OnPortfoliosChanged;
	}

	private void OnPortfoliosChanged(IEnumerable<Portfolio> portfolios)
	{
		if (portfolios.Contains(_portfolio) && _changed(_portfolio))
			Activate(_portfolio);
	}

	protected override void DisposeManaged()
	{
		_portfolio.Trader.PortfoliosChanged -= OnPortfoliosChanged;
		base.DisposeManaged();
	}
}
		
public static MarketRule<Portfolio, Portfolio> WhenMoneyMore(this Portfolio portfolio, Unit money)
{
	if (portfolio == null)
		throw new ArgumentNullException("portfolio");

	if (money == null)
		throw new ArgumentNullException("money");

	var finishMoney = money.Type == UnitTypes.Limit ? money : portfolio.CurrentValue + money;

	return new PortfolioRule(portfolio, pf => pf.CurrentValue > finishMoney)
	{
		Name = "Увеличение денег портфеля {0} выше {1}".Put(portfolio, finishMoney)
	};
}
		]]></code>
		<para>
			Правило <legacyItalic>PortfolioRule</legacyItalic> подписывается на событие
			<codeEntityReference qualifyHint="true">E:StockSharp.BusinessEntities.IConnector.PortfoliosChanged</codeEntityReference>
			и, как только оно вызывается, то проверяется условие на превышение текущего уровня денежных средств в портфеле выше определенного лимита.
			Если условие возвращает <legacyBold>true</legacyBold>, то активируется правило через метод 
			<codeEntityReference qualifyHint="true" autoUpgrade="true">M:StockSharp.Algo.MarketRule`2.Activate</codeEntityReference>
		</para>	

    </introduction>
	</developerWalkthroughDocument>
</topic>