<?xml version="1.0" encoding="utf-8"?>
<topic id="eeaa9b57-9108-4cbb-a9c1-e135eee35ae5" revisionNumber="0">
  <developerWalkthroughDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <!--<summary>
      <para>Optional abstract</para>
    </summary>-->

    <introduction>
		<para>
			Для стратегий, построенных на базе <codeEntityReference>T:StockSharp.Algo.Strategies.Strategy</codeEntityReference>, <token>stocksharp</token>
			предоставляет механизм генерации отчетов. Отчет включает в себя такие вещи, как код инструмента
			(<codeEntityReference qualifyHint="true">P:StockSharp.Algo.Strategies.Strategy.Security</codeEntityReference>),
			общее время работы (<codeEntityReference qualifyHint="true">P:StockSharp.Algo.Strategies.Strategy.TotalWorkingTime</codeEntityReference>),
			проскальзование (<codeEntityReference>P:StockSharp.Algo.Connector.SlippageManager</codeEntityReference>),
			P&amp;L (<codeEntityReference qualifyHint="true">P:StockSharp.Algo.Strategies.Strategy.PnLManager</codeEntityReference>) и т.д. Также, генерация
			отчетов включает детальную статистику по всем заявкам (<codeEntityReference qualifyHint="true">P:StockSharp.Algo.Strategies.Strategy.Orders</codeEntityReference>)
			и сделкам (<codeEntityReference qualifyHint="true">P:StockSharp.Algo.Strategies.Strategy.MyTrades</codeEntityReference>), которые были совершены в рамках
			работы стратегии.
		</para>
		<para>
			Механизм отчетов построен на базе класса <codeEntityReference>T:StockSharp.Algo.Strategies.Reporting.StrategyReport</codeEntityReference>, который
			стандартно имеет следующие реализации:
		</para>
		<list class="bullet">
			<listItem>
				<para>
					<codeEntityReference>T:StockSharp.Algo.Strategies.Reporting.ExcelStrategyReport</codeEntityReference> - генерация отчета в формат <token>excel</token>. 
					При данной генерации можно использовать файл-шаблон (<codeEntityReference>P:StockSharp.Algo.Strategies.Reporting.ExcelStrategyReport.Template</codeEntityReference>),
					который уже содержит необходимые формулы и графики, опирающиеся на генерируемые данные. Данные из шаблона перед генерацией копируются в
					результирующий файл, имя которого передается через конструктор.
				</para>
				<para>
					По умолчанию, <codeEntityReference>T:StockSharp.Algo.Strategies.Reporting.ExcelStrategyReport</codeEntityReference> использует лист
					<token>excel</token> с названием "отчет", куда записывает данные. Если такого листа в файле-шаблоне нет, то он будет автоматически создан.
				</para>
			</listItem>
			<listItem>
				<codeEntityReference>T:StockSharp.Algo.Strategies.Reporting.XmlStrategyReport</codeEntityReference> - генерация отчета в формат <token>xml</token>.
				Данный формат удобен, когда необходимо передать параметры стратегии из торгового робота в другую программу.
			</listItem>
			<listItem>
				<codeEntityReference>T:StockSharp.Algo.Strategies.Reporting.CsvStrategyReport</codeEntityReference> - генерация отчета в формат <token>csv</token>.
				Упрощенная версия <token>excel</token> отчета, поддерживается большим количеством сторонних программ.
			</listItem>
		</list>
    </introduction>

    <prerequisites>
      <content>
        <para>
			<link xlink:href="8c0327db-494a-4fe0-aba8-0d4b93dea60e">Событийная модель</link>
		</para>
      </content>
    </prerequisites>
    
    <!-- One or more procedure or section elements -->

    <procedure>
      <title>Добавление в SampleSMA генерации Excel отчета</title>

      <steps class="ordered">
        <step>
          <content>
			  <para>На форму необходимо добавить кнопку генерации отчета:</para>
			  <code><![CDATA[<Button x:Name="Report" Grid.Column="0" Width="100" Grid.ColumnSpan="2" Grid.Row="11" IsEnabled="False" Content="Отчет" Click="Report_Click" />]]></code>
          </content>
        </step>
		  <step>
			  <content>
				  <para>Сам код генерации (срабатывает при нажатии кнопки):</para>
				  <code><![CDATA[private void Report_Click(object sender, RoutedEventArgs e)
{
	// сгерерировать отчет по прошедшему тестированию
	new ExcelStrategyReport(_strategy, "sma.xls").Generate();

	// открыть отчет
	Process.Start("sma.xls");
}]]></code>
			  </content>
		  </step>
		  <step>
			  <content>
				  <para>
					  В результате сгенерированный файл будет находится в папке рядом с SampleSMA.exe
				  </para>
			  </content>
		  </step>
      </steps>
    </procedure>
    
    <!--<section>
      <title>Optional section</title>

      <content>
        <para>Some topic content</para>
      </content>
    </section>-->

    <nextSteps>
      <content>
        <para><link xlink:href="82437493-cd53-41eb-b756-d913af0f4f8e">Логирование</link></para>
      </content>
    </nextSteps>
    
    <relatedTopics>
      <!-- Supported Link Types
    
         All of the following linking mechanisms may be used in the topic's content 
         as well as in the related topics section.
    
    Linking to API reference documentation: 
    
		    <codeEntityReference>API reference ID</codeEntityReference>

    Linking to external resources and custom HTML topics: 

        <externalLink>
          <linkText>  Required hyperlink text  </linkText>
          <linkAlternateText>  Optional link title  </linkAlternateText>
          <linkUri>  Required URI  </linkUri>
        </externalLink>
    
    Linking to other conceptual topics: 
    
        <link xlink:href="GUID topic name (without file extension)" />
                
    Linking to named references:
    
        (Refer to the project's Help\Settings\links.xml file for more information)
    
        <link xref="id"> Optional link text </link>
        <link vref="id or URI"> Optional link text </link>
        
    -->

      <!-- Example Usage 

      <codeEntityReference>T:MyNamespace.MyClass</codeEntityReference>
      <codeEntityReference>P:MyNamespace.MyClass.MyProp</codeEntityReference>
      <codeEntityReference>M:System.IO.File.OpenText(System.String)</codeEntityReference>

      <externalLink>
        <linkText>Sandcastle Styles</linkText>
        <linkAlternateText>Sandcastle Styles on CodePlex</linkAlternateText>
        <linkUri>http://www.codeplex.com/SandcastleStyles</linkUri>
      </externalLink>

      <externalLink>
        <linkText>Change Log</linkText>
        <linkUri>ChangeLog.html</linkUri>
      </externalLink>

      <link xlink:href="2BFD9215-1216-403d-8C46-8420A4D01B83"/>
      
      <link xref="home">Our Home Page</link>
      <link vref="/controls/design.aspx">Control Architecture</link>
      -->
    </relatedTopics>
    
  </developerWalkthroughDocument>
</topic>