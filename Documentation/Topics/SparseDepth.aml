<?xml version="1.0" encoding="utf-8"?>
<topic id="9feaabde-52ea-4562-a666-380ce49c6df6" revisionNumber="0">
  <developerWalkthroughDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <!--<summary>
      <para>Optional abstract</para>
    </summary>-->

	  <introduction>
		  <para>
			  Стаканы в <token>stocksharp</token> представлены типом данных <codeEntityReference>T:StockSharp.BusinessEntities.MarketDepth</codeEntityReference>.
			  С помощью этого типа можно совершать ряд операций над данными в стакане. Например, можно делать разреженными или, наоборот, группировать
			  по ценовым уровням.
		  </para>
	  </introduction>

    <!--<prerequisites>
      <content>
        <para>Optional information on prerequisites</para>
      </content>
    </prerequisites>-->
    
    <!-- One or more procedure or section elements -->

	  <procedure>
		  <title>Модификации стакана</title>

		  <steps class="ordered">
			  <step>
				  <content>
					  <para>
						  Создание разреженного стакана из обычного осуществляется через метод <codeEntityReference qualifyHint="true">Overload:StockSharp.Algo.TraderHelper.Sparse</codeEntityReference>:
					  </para>
					  <code language="C#">MarketDepth depth = ....;

var sparseDepth = depth.Sparse();</code>
					  <para>
						  Все котировки <codeEntityReference>T:StockSharp.BusinessEntities.Quote</codeEntityReference> в полученном стакане будут иметь нулевой объем,
						  и они будут созданы с шагом <codeEntityReference qualifyHint="true">P:StockSharp.BusinessEntities.Security.StepPrice</codeEntityReference>.
					  </para>
					  <para>
						  Чтобы объединить разреженный стакан с первоначальным (соединить реальные котировки и разреженные), необходимо вызвать метод
						  <codeEntityReference qualifyHint="true">M:StockSharp.Algo.TraderHelper.Join(StockSharp.BusinessEntities.MarketDepth,StockSharp.BusinessEntities.MarketDepth)</codeEntityReference>:
					  </para>
					  <code language="C#">var joinedDepth = sparseDepth.Join(depth);</code>
				  </content>
			  </step>
			  <step>
				  <content>
					  <para>
						  Группировка стакана по ценовым уровням осуществляется через метод 
						  <codeEntityReference qualifyHint="true">M:StockSharp.Algo.TraderHelper.Group(StockSharp.BusinessEntities.MarketDepth,StockSharp.Messages.Unit)</codeEntityReference>:
					  </para>
					  <code language="C#">MarketDepth depth = ....;

// сгруппировать стакан по ценовому уровню в 10 пунктов
var grouppedDepth = depth.Group(10.Points(depth.Security));</code>
					  <para>
						  Результатом группировки будет стакан <codeEntityReference>T:StockSharp.BusinessEntities.MarketDepth</codeEntityReference>,
						  состоящий из котировок типа <codeEntityReference>T:StockSharp.BusinessEntities.AggregatedQuote</codeEntityReference>. Через свойство
						  <codeEntityReference qualifyHint="true">P:StockSharp.BusinessEntities.AggregatedQuote.InnerQuotes</codeEntityReference>
						  можно получить реальные котировки стакана, на основе которых произошла группировка по ценовому уровню.
					  </para>
				  </content>
			  </step>
		  </steps>
	  </procedure>
    
    <section>
      <title>Проверка данных</title>

      <content>
        <para>
        	Иногда требуется проверять данные в стакане для обнаружения в них коллизий. Например, проверка загруженных стаканов из внешних источников,
       		или отслеживание корректности работы биржи в период аномальной работы (кризис, стоп торги). Для этого можно использовать специальный метод
       		<codeEntityReference qualifyHint="true">M:StockSharp.BusinessEntities.MarketDepth.Verify</codeEntityReference>, который проверяет, не перемешаны
       		ли между собой биды и оффера.
       	</para>
      </content>
    </section>

    <!--<nextSteps>
      <content>
        <para>Optional next steps after reading this walk-through</para>
      </content>
    </nextSteps>-->
    
    <relatedTopics>
      <!-- Supported Link Types
    
         All of the following linking mechanisms may be used in the topic's content 
         as well as in the related topics section.
    
    Linking to API reference documentation: 
    
		    <codeEntityReference>API reference ID</codeEntityReference>

    Linking to external resources and custom HTML topics: 

        <externalLink>
          <linkText>  Required hyperlink text  </linkText>
          <linkAlternateText>  Optional link title  </linkAlternateText>
          <linkUri>  Required URI  </linkUri>
        </externalLink>
    
    Linking to other conceptual topics: 
    
        <link xlink:href="GUID topic name (without file extension)" />
                
    Linking to named references:
    
        (Refer to the project's Help\Settings\links.xml file for more information)
    
        <link xref="id"> Optional link text </link>
        <link vref="id or URI"> Optional link text </link>
        
    -->

      <!-- Example Usage 

      <codeEntityReference>T:MyNamespace.MyClass</codeEntityReference>
      <codeEntityReference>P:MyNamespace.MyClass.MyProp</codeEntityReference>
      <codeEntityReference>M:System.IO.File.OpenText(System.String)</codeEntityReference>

      <externalLink>
        <linkText>Sandcastle Styles</linkText>
        <linkAlternateText>Sandcastle Styles on CodePlex</linkAlternateText>
        <linkUri>http://www.codeplex.com/SandcastleStyles</linkUri>
      </externalLink>

      <externalLink>
        <linkText>Change Log</linkText>
        <linkUri>ChangeLog.html</linkUri>
      </externalLink>

      <link xlink:href="2BFD9215-1216-403d-8C46-8420A4D01B83"/>
      
      <link xref="home">Our Home Page</link>
      <link vref="/controls/design.aspx">Control Architecture</link>
      -->
    </relatedTopics>
    
  </developerWalkthroughDocument>
</topic>