<?xml version="1.0" encoding="utf-8"?>
<topic id="4b427409-9aa9-41d3-bb97-98745d1bba8e" revisionNumber="0">
  <developerHowToDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <!--<summary>
      <para>Optional abstract</para>
    </summary>-->

	<introduction>
		<para>
			Замена заявок при написании торговых алгоритмов более продвинутый способ, чем <link xlink:href="6267fec7-64e5-4488-ba08-c72cf61fcc9e">Снятие заявок</link> и последующая регистрация.
			Чтобы заменить заявку необходимо вызывать метод <codeEntityReference qualifyHint="true">M:StockSharp.BusinessEntities.IConnector.ReRegisterOrder(StockSharp.BusinessEntities.Order,System.Decimal,System.Decimal)</codeEntityReference>,
		   или сразу передать объект новой заявки <codeEntityReference qualifyHint="true">M:StockSharp.BusinessEntities.IConnector.ReRegisterOrder(StockSharp.BusinessEntities.Order,StockSharp.BusinessEntities.Order)</codeEntityReference>.
			<!--При этом, регистрируемый объем <codeEntityReference qualifyHint="true">P:StockSharp.BusinessEntities.Order.Volume</codeEntityReference> новой заявки будет равен
			нереализованному балансу <codeEntityReference qualifyHint="true">P:StockSharp.BusinessEntities.Order.Balance</codeEntityReference> старой.-->
		</para>
	  <para>
			 При замене стоп-заявок используется алгоритм с отменой заявки и выставлением новой. В итоге, всегда получается новый объект <codeEntityReference>T:StockSharp.BusinessEntities.Order</codeEntityReference>,
		который содержит информацию старой заявки + измененная часть. В дальнейшем, если требуется работа с измененной заявкой (например, отменить ее или опять изменить),
		то необходимо использовать именно этот новый объект <codeEntityReference>T:StockSharp.BusinessEntities.Order</codeEntityReference>.

	  </para>
	  <list class="ordered">
		<!--<listItem>
		  Если инструмент принадлежит <token>rts</token>, то посылается специализированная команда на замену заявки. Это сделано из-за того,
		  что только <token>rts</token> умеет сам заменять заявки. Это самый быстрый способ из поддерживаемых, но у него есть свои
		  ограничения - менять можно только цену и объем заявок. Также, он работает только с лимитированными заявками.
		</listItem>
		<listItem>Если инструмент принадлежит другой бирже, то заявка снимается через <codeEntityReference qualifyHint="true">M:StockSharp.BusinessEntities.IConnector.CancelOrder(StockSharp.BusinessEntities.Order)</codeEntityReference>,
		  а затем регистрируется через <codeEntityReference qualifyHint="true">M:StockSharp.BusinessEntities.IConnector.RegisterOrder(StockSharp.BusinessEntities.Order)</codeEntityReference>.
		</listItem> -->
	
	  </list>

		<para>
			В примере ниже показан способ "движения" заявки по лучшей цене:
		</para>
	</introduction>

    <!-- Specify at least one procedure or section/procedure and codeExample -->

    <!--<procedure>
      <title>Optional procedure</title>

      <steps class="ordered">
        <step>
          <content>
            <para>The first step of the procedure</para>
          </content>
        </step>
      </steps>
    </procedure>

    <section>
      <title>Optional section</title>

      <content>
        <para>Some topic content</para>
        <procedure>
          <title>Required procedure</title>

          <steps class="ordered">
            <step>
              <content>
                <para>The first step of the procedure.</para>
              </content>
            </step>
          </steps>
        </procedure>
      </content>
    </section>-->

      <code language="C#"><![CDATA[if (registeredOrder.Security.BestBid != null && registeredOrder.Security.BestAsk != null)
{
	// registeredOrder - это ранее зарегистрированная заявка.
	var newOrder = registeredOrder.Clone();

	// изменяем цену на лучшую
	newOrder.Price = (registeredOrder.Direction == OrderDirections.Buy ? registeredOrder.Security.BestBid : registeredOrder.Security.BestAsk).Price;

	// заменяем заявку на бирже
	trader.ReRegisterOrder(registeredOrder, newOrder);
}]]></code>

    <!--<buildInstructions>
      <content>
        <para>Optional information on building examples in this topic</para>
      </content>
    </buildInstructions>

    <robustProgramming>
      <content>
        <para>Optional information about things such as error handling</para>
      </content>
    </robustProgramming>

    <security>
      <content>
        <para>Optional information about security</para>
      </content>
    </security>-->

    <relatedTopics>
      <!-- Supported Link Types
    
         All of the following linking mechanisms may be used in the topic's content 
         as well as in the related topics section.
    
    Linking to API reference documentation: 
    
		    <codeEntityReference>API reference ID</codeEntityReference>

    Linking to external resources and custom HTML topics: 

        <externalLink>
          <linkText>  Required hyperlink text  </linkText>
          <linkAlternateText>  Optional link title  </linkAlternateText>
          <linkUri>  Required URI  </linkUri>
        </externalLink>
    
    Linking to other conceptual topics: 
    
        <link xlink:href="GUID topic name (without file extension)" />
                
    Linking to named references:
    
        (Refer to the project's Help\Settings\links.xml file for more information)
    
        <link xref="id"> Optional link text </link>
        <link vref="id or URI"> Optional link text </link>
        
    -->
		<link xlink:href="6267fec7-64e5-4488-ba08-c72cf61fcc9e">Снятие заявок</link>

      <!-- Example Usage 

      <codeEntityReference>T:MyNamespace.MyClass</codeEntityReference>
      <codeEntityReference>P:MyNamespace.MyClass.MyProp</codeEntityReference>
      <codeEntityReference>M:System.IO.File.OpenText(System.String)</codeEntityReference>

      <externalLink>
        <linkText>Sandcastle Styles</linkText>
        <linkAlternateText>Sandcastle Styles on CodePlex</linkAlternateText>
        <linkUri>http://codeplex.com/SandcastleStyles</linkUri>
      </externalLink>

      <externalLink>
        <linkText>Change Log</linkText>
        <linkUri>ChangeLog.html</linkUri>
      </externalLink>

      <link xlink:href="2BFD9215-1216-403d-8C46-8420A4D01B83"/>
      
      <link xref="home">Our Home Page</link>
      <link vref="/controls/design.aspx">Control Architecture</link>
      -->
    </relatedTopics>
    
  </developerHowToDocument>
</topic>
