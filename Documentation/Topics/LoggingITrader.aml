<?xml version="1.0" encoding="utf-8"?>
<topic id="9619f1db-064f-421f-967e-4c15a5b0aa71" revisionNumber="1">
  <developerWalkthroughDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">

    <introduction>
		<para>
			Объекты <codeEntityReference>T:StockSharp.BusinessEntities.IConnector</codeEntityReference>
			аналогично <link xlink:href="eca7454c-0532-4aaf-92bf-7a3d0cba635b">стратегиям</link>, также реализуют интерфейс
			<codeEntityReference>T:StockSharp.Logging.ILogSource</codeEntityReference>. Следовательно, от объекта <codeEntityReference>T:StockSharp.BusinessEntities.IConnector</codeEntityReference>
			можно получать сообщения через <codeEntityReference>T:StockSharp.Logging.LogManager</codeEntityReference> всеми способами,
			что доступны стратегиям.
		</para>
    </introduction>

    <procedure>
      <title>Пример логирования IConnector</title>

      <steps class="ordered">
          <step>
			  <content>
				  <para>
				  	В качестве демонстрации выбраны примеры, демонстрирующие работу с <token>alfa</token>. Все примеры логируют информацию от шлюза в
				  	текстовый файл.
				  </para>
			  </content>
		  </step>
          <step>
          	<content>
			  	<para>
					В самом начале необходимо создать менеджер логирования:
			 	</para>
				<code language="C#">private readonly LogManager _logManager = new LogManager();</code>
			</content>
		  </step>
		  <step>
			<content>
				<para>
					Затем необходимо создать файловый логгер и добавить его в <codeEntityReference qualifyHint="true">P:StockSharp.Logging.LogManager.Listeners</codeEntityReference>:
				</para>
				<code language="C#">_logManager.Listeners.Add(new FileLogListener());</code>
			</content>
		</step>
		  <step>
			  <content>
				  <content>
						<para>
							Заключительным этапом является добавление <codeEntityReference>T:StockSharp.AlfaDirect.AlfaTrader</codeEntityReference>
							в <codeEntityReference qualifyHint="true">P:StockSharp.Logging.LogManager.Sources</codeEntityReference>:
						</para>
						<code language="C#">_logManager.Sources.Add(_trader);</code>
					</content>
			  </content>
		  </step>
		  <step>
			  <content>
				  <para>
					  В итоге программа после запуска будет выводить сообщения, как показано ниже:
				  </para>
				  <code language="Output"><![CDATA[18:43:15 | Info  | AlfaTrader      | AlfaDirect v.3.5.2.6
18:43:15 | Debug | AlfaTrader      | StartExport()
18:43:15 | Debug | AlfaWrapper     | ReadPortfolios()
18:43:15 | Debug | AlfaTrader      | OnProcessPortfolios()
18:43:15 | Debug | AlfaTrader      | 41469|15152,43|15530,8|
18:43:15 | Debug | AlfaWrapper     | ReadSecurities()
18:43:15 | Debug | AlfaTrader      | OnProcessSecurities
18:43:15 | Debug | AlfaTrader      | 291|Лукойл а.о.|27.05.2011|4|LKOH|MICEX_SHR|RUR|0|0|MCX_SHR_LST|
]]></code>
			  </content>
		  </step>
      </steps>
    </procedure>

    <!--relatedTopics>
      <link xlink:href="dc7d8d3b-1d25-4f81-a043-dd4ee9f34147">Настройка терминала</link>
      <link xlink:href="bc7a69cf-35f2-413d-a041-de705543f23c">Пример использования</link>
      <link xlink:href="c0f3f55c-3832-46ed-90da-30129019c8f3">Стоп-заявки</link>
    </relatedTopics-->
  </developerWalkthroughDocument>
</topic>