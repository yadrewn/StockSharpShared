<?xml version="1.0" encoding="utf-8"?>
<topic id="41a3b3e7-a7cd-43ba-842f-13f6a7199d26" revisionNumber="0">
  <developerWalkthroughDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
	  <introduction>
		  <para>Заявка во время своей жизни проходит следующие состояния:</para>
		  <mediaLink><image placement="center" xlink:href="OrderStates"/></mediaLink>
		  <list class="bullet">
			  <listItem>
				  <codeEntityReference>F:StockSharp.Messages.OrderStates.None</codeEntityReference> - заявка была создана в роботе и еще не была отправлена на регистрацию.
			  </listItem>
			  <listItem>
				  <codeEntityReference>F:StockSharp.Messages.OrderStates.Pending</codeEntityReference> - заявка была отправлена на регистрацию
				  (<codeEntityReference qualifyHint="true">M:StockSharp.BusinessEntities.IConnector.RegisterOrder(StockSharp.BusinessEntities.Order)</codeEntityReference>) и для нее было вызвано событие
				  <codeEntityReference qualifyHint="true">E:StockSharp.BusinessEntities.IConnector.NewOrders</codeEntityReference>. Для заявки ожидается подтверждение ее принятия от биржи.
				  В случае успеха принятия  будет вызвано событие <codeEntityReference qualifyHint="true">E:StockSharp.BusinessEntities.IConnector.OrdersChanged</codeEntityReference>,
				  и заявка будет переведена в состояние <codeEntityReference>F:StockSharp.Messages.OrderStates.Active</codeEntityReference>. Также будут проинициализированы
				  свойства <codeEntityReference qualifyHint="true">P:StockSharp.BusinessEntities.Order.Id</codeEntityReference> и <codeEntityReference qualifyHint="true">P:StockSharp.BusinessEntities.Order.Time</codeEntityReference>.
				  В случае отвержения заявки будет вызвано событие <codeEntityReference qualifyHint="true">E:StockSharp.BusinessEntities.IConnector.OrdersRegisterFailed</codeEntityReference>
				  с описанием ошибки, и заявка будет переведена в состояние <codeEntityReference>F:StockSharp.Messages.OrderStates.Failed</codeEntityReference>.
			  </listItem>
			  <listItem>
				  <codeEntityReference>F:StockSharp.Messages.OrderStates.Active</codeEntityReference> - заявка активна на бирже. Такая
				  заявка будет активна до тех пор, пока не исполнится весь ее выставленный объем <codeEntityReference qualifyHint="true">P:StockSharp.BusinessEntities.Order.Volume</codeEntityReference>,
				  или она не будет снята принудительно через <codeEntityReference qualifyHint="true">M:StockSharp.BusinessEntities.IConnector.CancelOrder(StockSharp.BusinessEntities.Order)</codeEntityReference>.
				  Если заявка исполняется частично, то вызываются события <codeEntityReference qualifyHint="true">E:StockSharp.BusinessEntities.IConnector.NewMyTrades</codeEntityReference>
				  о новых сделках по выставленной заявке, а так же событие <codeEntityReference qualifyHint="true">E:StockSharp.BusinessEntities.IConnector.OrdersChanged</codeEntityReference>,
				  где передается уведомление об изменении баланса по заявке <codeEntityReference qualifyHint="true">P:StockSharp.BusinessEntities.Order.Balance</codeEntityReference>.
				  Последнее событие будет выведено и в случае отмены заявки.</listItem>
			  <listItem>
				  <codeEntityReference>F:StockSharp.Messages.OrderStates.Done</codeEntityReference> - заявка более не активна на бирже (была полностью исполнена или снята).
			  </listItem>
			  <listItem>
				  <codeEntityReference>F:StockSharp.Messages.OrderStates.Failed</codeEntityReference> - заявка не была принята биржей (или промежуточной
				  системой, как, например, серверная часть торговой платформы) по какой-либо причине.
			  </listItem>
		  </list>
		  <para>
			  Для того, чтобы узнать, в каком торговом состоянии находится заявка (какой объем реализован, была ли полностью удовлетворена заявка и т.д.)
			  необходимо использовать методы <codeEntityReference>M:StockSharp.Algo.TraderHelper.IsCanceled(StockSharp.BusinessEntities.Order)</codeEntityReference>,
			  <codeEntityReference>M:StockSharp.Algo.TraderHelper.IsMatchedEmpty(StockSharp.BusinessEntities.Order)</codeEntityReference>,
			  <codeEntityReference>M:StockSharp.Algo.TraderHelper.IsMatchedPartially(StockSharp.BusinessEntities.Order)</codeEntityReference>,
			  <codeEntityReference>M:StockSharp.Algo.TraderHelper.IsMatched(StockSharp.BusinessEntities.Order)</codeEntityReference> и
			  <codeEntityReference>M:StockSharp.Algo.TraderHelper.GetMatchedVolume(StockSharp.BusinessEntities.Order,System.Boolean)</codeEntityReference>:</para>
			  <code language="C#">// любая заявка
Order order = ....

// отменена ли
Console.WriteLine(order.IsCanceled());

// исполнилась ли полностью
Console.WriteLine(order.IsMatched());

// исполнилась ли частично
Console.WriteLine(order.IsMatchedPartially());

// исполнилась ли хотя бы одна часть заявки 
Console.WriteLine(order.IsMatchedEmpty());

// получить реализованный объем
Console.WriteLine(order.GetRealizedVolume());</code>
	  </introduction>
  </developerWalkthroughDocument>
</topic>
